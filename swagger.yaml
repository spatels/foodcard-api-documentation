---
openapi: 3.0.0
info:
  title: MCS512 Foodcard API
  description: |-
    This API is intented to used by the frontend of foodcard application and developing third party intergrations.\
    **Designed by** :\
      Christopher Mignogna\
      Gloria Hernandez\
      Satya Patel 
  version: 1.0.0
servers:
  - url: https://api.foodcard.caeio.com/v1/
  - url: https://keycloak.foodcard.caeio.com/auth/realms/mcs512/protocol/openid-connect
tags:
  - name: authentication
    description: Requesting access token from keycloack
  - name: students
    description: Everything related to students
  - name: reports
    description: Building various reports
  - name: payables
    description: Processing transfer
paths:
  /token:
    post:
      tags:
        - authentication
      summary: acquire access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/requestToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/requestToken'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
            application/xml:
              schema:
                $ref: '#/components/schemas/token'
  /students/purchase:
    get:
      tags:
        - students
      summary: get a list of purchases made in a given timeframe
      parameters:
        - in: query
          name: foodcardId
          schema:
              type: integer
              format: int64
              example: 100000
          required: true
          description: The card id
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          required: true
          description: The start date for the report
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          required: true
          description: The end date for the report
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseHistory'
            application/xml:
              schema:
                $ref: '#/components/schemas/purchaseHistory'
      security:
        - foodcardAuth: []
    post:
      tags:
        - students
      summary: Make a purchase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pay'
          application/xml:
            schema:
              $ref: '#/components/schemas/pay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/pay'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
      security:
        - foodcardAuth: []
  /students/balance:
    get:
      tags:
        - students
      summary: get current balance
      parameters:
        - in: query
          name: foodcardId
          schema:
              type: integer
              format: int64
              example: 100000
          required: true
          description: The card id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkBalance'
            application/xml:
              schema:
                $ref: '#/components/schemas/checkBalance'
      security:
        - foodcardAuth: []
    post:
      tags:
        - students
      summary: refill foodcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refillCard'
          application/xml:
            schema:
              $ref: '#/components/schemas/refillCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/refillCard'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newBalance'
            application/xml:
              schema:
                $ref: '#/components/schemas/newBalance'
  /reports/alert:
    get:
      tags:
        - reports
      summary: get a list of students to whom an alert needs to be sent
      parameters:
        - in: query
          name: thersholdAmount
          schema:
            type: number
            format: float
            example: 19.87
          required: true
          description: The minimum balance amount
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
            application/xml:
              schema:
                $ref: '#/components/schemas/alert'
      security:
        - foodcardAuth: []
  /reports/statements/spending:
    get:
      tags:
        - reports
      summary: get a spending statement
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          required: true
          description: The start date for the report
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          required: true
          description: The end date for the report
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/spendingSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/spendingSummary'
      security:
        - foodcardAuth: []
  /reports/statements/balance:
    get:
      tags:
        - reports
      summary: get a balance statement
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          required: true
          description: The start date for the report
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          required: true
          description: The end date for the report
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balanceSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/balanceSummary'
      security:
        - foodcardAuth: []
  /payables/list:
    get:
      tags:
        - payables
      summary: get a list of all transactions that are eligible for payment
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          required: true
          description: The start date for the report
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          required: true
          description: The end date for the report
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions'
            application/xml:
              schema:
                $ref: '#/components/schemas/transactions'
      security:
        - foodcardAuth: []
  /payables/approval:
    put:
      tags:
        - payables
      summary: approving transactions for transfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approval'
          application/xml:
            schema:
              $ref: '#/components/schemas/approval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/approval'
        required: true
      responses:
        '204':
          description: The approval was updated successfully.
      security:
        - foodcardAuth: []
  /payables/refund:
    post:
      tags:
        - payables
      summary: give student a refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refund'
          application/xml:
            schema:
              $ref: '#/components/schemas/refund'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/refund'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
      security:
        - foodcardAuth: []
components:
  schemas:
    requestToken:
      type: object
      properties:
        user_name:
          type: integer
          format: int64
          example: 10
        password:
          type: string
          format: string
          example: ch@ngeMe!
        client_id:
          type: string
          format: float
        client_secret:
          type: string
          format: string
        grant_type:
          type: string
          format: string
          example: password
      required:
        [-user_name
        -password
        -client_id
        -client_secret
        -grant_type
        ]
    token:
      type: object
      properties:
        access_token:
          type: string
          format: jwt
          example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiAwNjEwLCJpc3MiOiJodHRwO.......wKRTus6PAoHMFlIlYQ75dYiLzzuRMvdXkHl6naLNQ8wYDv4gi7A3eJ163YzXSJf5PmQ
        expires_in:
          type: integer
          format: integer
          example: 600
        refresh_expires_in:
          type: integer
          format: integer
          example: 1800
        refresh_token:
          type: string
          format: jwt
          example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiAwNjEwLCJpc3MiOiJodHRwO.......wKRTus6PAoHMFlIlYQ75dYiLzzuRMvdXkHl6naLNQ8wYDv4gi7A3eJ163YzXSJf5PmQ
        token_type:
          type: string
          format: string
          example: bearer
        id_token:
          type: string
          format: jwt
          example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiAwNjEwLCJpc3MiOiJodHRwO.......wKRTus6PAoHMFlIlYQ75dYiLzzuRMvdXkHl6naLNQ8wYDv4gi7A3eJ163YzXSJf5PmQ
        not-before-policy:
          type: integer
          format: integer
          example: 0
        session_state:
          type: string
          format: string
          example: 2c8278b-3346-468e-9533-f41f22ed264f
        scope:
          type: string
          format: string
          example: "foodcard web application"
    purchaseHistory:
      type: array
      items:
        type: object
        properties:
          transactionId:
            type: integer
            format: int64
            example: 10
          transactionDate:
            type: string
            format: date-time
          storeName:
            type: string
            format: string
            example: caeio,LLC
          amount:
            type: number
            format: float
            example: 19.87
    pay:
      type: object
      properties:
        foodcardId:
          type: integer
          format: int64
          example: 10
        storeId:
          type: integer
          format: int64
          example: 10
        amount:
          type: number
          format: float
          example: 19.87
      required:
        [-foodcardId
        -storeId
        -amount]
    transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
          example: 100000
        balance:
          type: number
          format: float
          example: 19.87
    checkBalance:
      type: object
      properties:
        balance:
          type: number
          format: float
          example: 19.87
    refillCard:
      type: object
      properties:
        studentName:
          type: string
          format: string
          example: Tony Stark
        studentId:
          type: integer
          format: int64
          example: 10
        foodcardId:
          type: integer
          format: int64
          example: 10
        amount:
          type: number
          format: float
          example: 19.87
      required:
        [-foodcardId
        -amount
        -studentName
        -studentId]
    newBalance:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
          example: 100000
        balance:
          type: number
          format: float
          example: 19.87
    alert:
      type: array
      items:
        type: object
        properties:
          studentId:
            type: integer
            format: int64
            example: 10
          studentEmail:
            type: string
            format: string
            example: satya.patel@caeio.com
          studentName:
            type: string
            format: string
            example: Satya Patel
          studentPhone:
            type: integer
            format: int64
            example: 5055552141
          amount:
            type: number
            format: float
            example: 19.87
    spendingSummary:
      type: array
      items:
        type: object
        properties:
          foodCardId:
            type: integer
            format: int64
            example: 10
          storeId:
            type: integer
            format: int64
            example: 10
          amount:
            type: number
            format: float
            example: 19.87
          transactionDate:
            type: string
            format: date-time
    balanceSummary:
      type: array
      items:
        type: object
        properties:
          foodCardId:
            type: integer
            format: int64
            example: 10
          amount:
            type: number
            format: float
            example: 19.87
          transactionType:
            type: string
            enum: [refill,refund,purchase]
          transactionDate:
            type: string
            format: date-time
    transactions:
      type: array
      items:
        type: object
        properties:
          TransactionId:
            type: integer
            format: int64
            example: 10
          amount:
            type: number
            format: float
            example: 19.87
          routingNumber:
            type: integer
            format: int64
            example: 10
          accountNumber:
            type: integer
            format: int64
            example: 10
          bankName:
            type: string
            format: string
            example: Wells Fargo
    refund:
      type: object
      properties:
        foodcardId:
          type: integer
          format: int64
          example: 10
        parentTransactionId:
          type: integer
          format: int64
          example: 10
        amount:
          type: number
          format: float
          example: 19.87
        storeId:
          type: integer
          format: int64
          example: 10
      required:
        [-foodcardId
        -storeId
        -parentTransactionId
        -amount]
    approval:
      type: object
      properties:
        transacationId:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
        isApproved:
          type: boolean
          example: true
        approvalDate:
          type: string
          format: date-time
  securitySchemes:
    foodcardAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
